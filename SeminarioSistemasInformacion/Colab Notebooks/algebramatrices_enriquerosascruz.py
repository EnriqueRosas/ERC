# -*- coding: utf-8 -*-
"""AlgebraMatrices_EnriqueRosasCruz.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/144sukoGNgbsMFRIlyg3C-8C0bPlbdHyB
"""

# Función para que el usuario ingrese una matriz de tamaño n
def leer_matriz(filas, columnas):
    matriz = []
    for i in range(filas):
        fila = []
        for j in range(columnas):
            try:
                valor = float(input(f"Ingrese el elemento en la posición ({i+1}, {j+1}): "))
                fila.append(valor)
            except ValueError:
                print("Error: ¡Debe ingresar un número! Inténtelo de nuevo.")
                return None
        matriz.append(fila)
    return matriz

# Función para sumar matrices
def sumar_matrices(matriz1, matriz2):
    filas = len(matriz1)
    columnas = len(matriz1[0])

    resultado = []
    for i in range(filas):
        fila_resultado = []
        for j in range(columnas):
            suma = matriz1[i][j] + matriz2[i][j]
            fila_resultado.append(suma)
        resultado.append(fila_resultado)

    return resultado

# Función para restar matrices
def restar_matrices(matriz1, matriz2):
    filas = len(matriz1)
    columnas = len(matriz1[0])

    resultado = []
    for i in range(filas):
        fila_resultado = []
        for j in range(columnas):
            resta = matriz1[i][j] - matriz2[i][j]
            fila_resultado.append(resta)
        resultado.append(fila_resultado)

    return resultado

# Función para transponer una matriz
def transponer_matriz(matriz):
    filas = len(matriz)
    columnas = len(matriz[0])

    resultado = []
    for i in range(columnas):
        fila_resultado = []
        for j in range(filas):
            fila_resultado.append(matriz[j][i])
        resultado.append(fila_resultado)

    return resultado

# Función para imprimir una matriz
def imprimir_matriz(matriz):
    for fila in matriz:
        print(fila)
#inicia el programa
while True:
    print("=================================")
    print("1. Suma de matrices")
    print("2. Resta de matrices")
    print("3. Transposición de matriz")
    print("4. Salir")
    print("=================================\n")

    opcion = input("Seleccione la operación a realizar (o ingrese '4' para salir): ")
    #en caso de ingresar 4 termina el programa
    if opcion == '4':
        print("Saliendo del programa.")
        break
    #validamos si se ingreso un numero
    try:
        opcion = int(opcion)
    except ValueError:
        print("Error: Ingrese un número válido.")
    #estas opciones es pór si se escoje suma o resta
    #en ambos casos se tiene que imgresar 2 matrices para realizar la operacion
    if opcion == 1 or opcion == 2:
        try:
            filas = int(input("Ingrese el número de FILAS: "))
            columnas = int(input("Ingrese el número de COLUMNAS: "))
        except ValueError:
            print("Error: Ingrese un valor numérico válido.")
        #asignamos la matriz ingresada a matriz1
        print("\nEsta es la primera matriz")
        matriz1 = leer_matriz(filas, columnas)
        if matriz1 is None:
            continue
        imprimir_matriz(matriz1)
        #asignamos la matriz ingresada a matriz2
        print("\nIngrese la segunda matriz")
        matriz2 = leer_matriz(filas, columnas)
        if matriz2 is None:
            continue
        print("Esta es la segunda matriz")
        imprimir_matriz(matriz2)
        #si la opcion es 1 se hace la suma
        if opcion == 1:
            resultado = sumar_matrices(matriz1, matriz2)
            print("\nResultado de la suma de matrices:")
        else:
          #se realiza la resta
            resultado = restar_matrices(matriz1, matriz2)
            print("\nResultado de la resta de matrices:")
#opcion para la matriz transpuesta
    elif opcion == 3:
        try:
            filas = int(input("Ingrese el número de filas: "))
            columnas = int(input("Ingrese el número de columnas: "))
        except ValueError:
            print("Error: Ingrese un valor numérico válido.")

        matriz = leer_matriz(filas, columnas)
        if matriz is None:
            continue
        print("\nMatriz ingresada:")
        imprimir_matriz(matriz)
        #se aplica la transpuesta y se guarda en resultado
        resultado = transponer_matriz(matriz)
        print("\nResultado de la transposición de matriz:")
    imprimir_matriz(resultado)
